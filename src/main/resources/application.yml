spring:
  profiles:
    active: default
    include: mail
  cloud:
    aws:
      credentials:
        access-key: ${AWS_ACCESS_KEY}
        secret-key: ${AWS_SECRET_KEY}
      region:
        static: ${AWS_STATIC_REGION:ap-northeast-2}
  config:
    import: optional:file:.env
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration
  datasource:
    url: jdbc:${DB_TYPE:mysql}://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:test}?${DB_PARAMS:serverTimezone=UTC&useUnicode=true&characterEncoding=utf8}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: ${DB_DRIVER:com.mysql.cj.jdbc.Driver}
  jpa:
    hibernate:
      ddl-auto: ${DB_DDL_AUTO:create-drop}
      naming:
        physical-strategy: com.example.green.infra.database.strategy.UpperSnakeNamingStrategy
    properties:
      hibernate:
        default_batch_fetch_size: ${BATCH_FETCH_SIZE:100}
        format_sql: ${FORMAT_SQL:false}
    open-in-view: false
    defer-datasource-initialization: ${DEFER_INIT:false}
  sql:
    init:
      data-locations: ${SQL_DATA_LOCATION}
      mode: ${SQL_INIT_MODE:never}
  servlet:
    multipart:
      max-file-size: ${MAX_FILE_SIZE:10MB}
      max-request-size: ${MAX_REQUEST_SIZE:35MB}
  # 세션 설정 (OAuth2 Cross-domain 지원)
  session:
    store-type: memory
    timeout: 30m
    cookie:
      name: JSESSIONID
      http-only: true
      secure: true
      same-site: none
      max-age: 1800
      path: /

  security:
    oauth2:
      client:
        registration:
          google:
            client-name: ${OAUTH2_GOOGLE_CLIENT_NAME:google}
            client-id: ${OAUTH2_GOOGLE_CLIENT_ID}
            client-secret: ${OAUTH2_GOOGLE_CLIENT_SECRET}
            redirect-uri: ${OAUTH2_GOOGLE_REDIRECT_URI:https://api.greenwinit.store/login/oauth2/code/google}
            authorization-grant-type: ${OAUTH2_GOOGLE_GRANT_TYPE:authorization_code}
            scope: ${OAUTH2_GOOGLE_SCOPE:profile,email}
          naver:
            client-name: ${OAUTH2_NAVER_CLIENT_NAME:naver}
            client-id: ${OAUTH2_NAVER_CLIENT_ID}
            client-secret: ${OAUTH2_NAVER_CLIENT_SECRET}
            redirect-uri: ${OAUTH2_NAVER_REDIRECT_URI:https://api.greenwinit.store/login/oauth2/code/naver}
            authorization-grant-type: ${OAUTH2_NAVER_GRANT_TYPE:authorization_code}
            scope: ${OAUTH2_NAVER_SCOPE:name,email}
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response


logging:
  level:
    org.springframework: ${LOG_LEVEL_SPRING:INFO}
    org.hibernate.SQL: ${LOG_LEVEL_SQL:DEBUG}
    # OAuth2 디버그 로깅 추가
    org.springframework.security.oauth2: DEBUG
    org.springframework.security.web.authentication: DEBUG
    com.example.green.domain.auth: DEBUG

decorator:
  datasource:
    p6spy:
      enable-logging: ${P6_SPY:false}
      multiline: true

springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    path: ${SWAGGER_PATH:/swagger-ui.html}
    tags-sorter: alpha
    operations-sorter: method
    doc-expansion: none

app:
  storage:
    bucket: ${STORAGE_BUCKET}
    base-url: ${STORAGE_BASE_URL}
  frontend:
    base-url: ${FRONTEND_URL:http://localhost:3000}
  backend:
    base-url: ${BACKEND_URL:http://localhost:8080}

jwt:
  secret: ${JWT_SECRET}
  access-expiration: ${JWT_ACCESS_EXPIRATION:900000}
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}
  temp-expiration: ${JWT_TEMP_EXPIRATION:600000}
